{"version":3,"file":"component---src-pages-recommended-js-9bfc02a5998d8a505656.js","mappings":"iIAYOA,EAA8B,oBAAXC,OACnBC,EAAM,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,YAAaC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,MAAkBC,GAAqB,EAAhCC,IAAgC,EAA3BC,KAA2B,EAArBF,UAAUG,EAAW,EAAXA,KAGzDC,EAAWC,oDAAuBC,QAAQ,WAAW,IAAIA,QAAQ,OAAO,IACxEC,EAAUF,oDAAyBF,EAAO,IAClC,IAARA,IAAYI,EAAUF,qDAC1B,IAAIG,EAAW,GACXd,IACFU,EAAWT,OAAOc,SAASC,SAC3BH,EAAUZ,OAAOc,SAASE,KAC1BH,EAAWb,OAAOc,SAASE,KAAKL,QAAQX,OAAOc,SAASG,SAAS,KAGlE,IAAMC,EAAkBhB,EAGxB,OACE,gBAAC,IAAD,CACEiB,eAAgB,CACdhB,KAAAA,GAGFiB,KAAM,CAAC,CAAEC,IAAK,YAAaL,KAAMJ,IACjCR,MAAOC,EAEPiB,cAAeb,EAAQ,QAAWA,EAAa,KAE/Cc,KAAM,CACJ,CACEC,KAAK,cACLC,QAASpB,EAAW,MAAQa,GAE9B,CACEQ,SAAS,SACTD,QAAS,gFAEX,CACEC,SAAS,YACTD,QAAS,SAEX,CACCC,SAAS,UACTD,QAAQ,WAEV,CACEC,SAAS,WACTD,QAASpB,EAAW,MAAQI,GAE7B,CACEiB,SAAS,iBACTD,QAASP,GAEX,CACGQ,SAAS,SACTD,QAASb,GAEZ,CACGY,KAAK,eACLC,QAAShB,GAEX,CACEe,KAAK,eACLC,QAAS,uBAEX,CACED,KAAK,gBACLC,QAASpB,EAAW,MAAQI,GAE9B,CACEe,KAAK,sBACLC,QAASP,GAEZ,CACEM,KAAK,iBACLC,QAAS,cAEX,CACED,KAAK,gBACLC,QAAS,SAEX,CACGD,KAAK,iBACLC,QAAS,gBAEX,CACED,KAAK,gBACLC,QAAS,eAMf,0BAAQE,KAAK,uBAAb,kIAIuDd,EAJvD,2JAQkBA,EARlB,8LAa8BA,EAb9B,4OAoBoBA,EApBpB,+BAqBoBA,EArBpB,4MA4BoBA,EA5BpB,wEA8BoBA,EA9BpB,6cAsCwBA,EAtCxB,mGA0CoBA,EA1CpB,uCA2CoBA,EA3CpB,gCA4CqBT,EA5CrB,MA4CgCK,EA5ChC,wKA+CgCI,EA/ChC,qDAgDkCA,EAhDlC,0FA2DLZ,EAAI2B,aAAe,CACjBzB,KAAK,KACLoB,KAAM,GACNrB,YAAY,IASd,O,wEClHD,UAxDkB,WAChB,IAAM2B,GAAOC,EAAAA,EAAAA,gBAAe,cAwB5B,IAAID,EAAKE,OAAT,CAIA,IAAIC,EAAOH,EAAKI,kBAAkBC,MAAM,GAAG7B,SAAS8B,cACpD,OACE,2BACE,gBAAC,IAAD,KACA,gBAAC,IAAD,CAAKjC,YAAa2B,EAAKO,oBAAoBF,MAAM,GAAGhC,YAAaM,KAAMqB,EAAKO,oBAAoBF,MAAM,GAAGG,cAAehC,SAAUwB,EAAKO,oBAAoBF,MAAM,GAAGG,gBAElK,uBAAKC,UAAU,mBACb,uBAAKA,UAAU,wCACP,sBAAIA,UAAU,oBAAd,yBAER,uBAAKA,UAAU,yCACZT,EAAKI,kBAAkBC,MAAM,GAAGT,QAAQc,KAAI,SAACV,EAAMW,GAClD,OAAyB,IAArBX,EAAKY,MAAMC,OAEb,gBAAC,EAAAC,KAAD,CAAMC,GAAE,IAAMZ,EAAN,IAAeH,EAAKrB,KAApB,IAA6B8B,UAAU,+BAA+BO,IAAG,gBAAkBL,GACjG,uBAAKM,MAAM,QAAQjB,EAAKL,MACxB,uBAAKsB,MAAM,QAAQjB,EAAKY,MAAMC,SAErB,YArBvBK,QAAQC,IAAI,wBAAyBnB,EAAKE","sources":["webpack://blogsite/./src/components/seo/seoall.js","webpack://blogsite/./src/pages/recommended.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\n import * as React from \"react\"\n import PropTypes from \"prop-types\"\n import { Helmet} from \"react-helmet\"\n \n\n const isBrowser = typeof window !== \"undefined\"\n const Seo = ({ description, lang, title, img, time, category, slug }) => {\n\n\n  var sitename = process.env.GATSBY_URL.replace('https://','').replace('.com','')\n  var fullurl = process.env.GATSBY_URL + slug + '/'\n  if (slug == ''){fullurl = process.env.GATSBY_URL}\n  var homepath = ''\n  if (isBrowser){\n    sitename = window.location.hostname\n    fullurl = window.location.href\n    homepath = window.location.href.replace(window.location.pathname,'')\n  }\n\n   const pageDescription = description \n   \n   \n   return (\n     <Helmet\n       htmlAttributes={{\n         lang,\n       }}\n\n       link={[{ rel: 'canonical', href: fullurl }]}\n       title={category}\n\n       titleTemplate={sitename ? `%s - ${sitename}` : null}\n       \n       meta={[\n         {\n           name: `description`,\n           content: category + ' - ' + pageDescription,\n         },\n         {\n           property: `robots`,\n           content: 'follow, index, max-snippet:-1, max-video-preview:-1, max-image-preview:large',\n         },\n         {\n           property: `og:locale`,\n           content: \"en_US\",\n         },\n         {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:title`,\n          content: category + ' - ' + sitename,\n        },\n         {\n           property: `og:description`,\n           content: pageDescription,\n         },\n         {\n            property: `og:url`,\n            content: fullurl,\n         },\n         {\n            name: `og:site_name`,\n            content: sitename,\n          },\n          {\n            name: `twitter:card`,\n            content: 'summary_large_image',\n          },\n          {\n            name: `twitter:title`,\n            content: category + ' - ' + sitename,\n          },\n          {\n            name: `twitter:description`,\n            content: pageDescription,\n          },\n         {\n           name: `twitter:label1`,\n           content: 'Written by',\n         },\n         {\n           name: `twitter:data1`,\n           content: 'admin',\n         },\n         {\n            name: `twitter:label2`,\n            content: 'Time to read',\n          },\n          {\n            name: `twitter:data2`,\n            content: '4 minutes',\n          }\n       ]}\n\n\n     >\n      <script type=\"application/ld+json\">\n        {`{\n        \"@context\": \"https://schema.org/\",\n        \"@graph\": [\n            { \"@type\": [\"Person\", \"Organization\"], \"@id\": \"${homepath}#person\", \"name\": \"Ayush\" },\n            {\n              \"@context\": \"https://schema.org/\",\n              \"@type\": \"WebSite\",\n              \"url\": \"${homepath}\",\n              \"potentialAction\": {\n                \"@type\": \"SearchAction\",\n                \"target\": {\n                  \"@type\": \"EntryPoint\",\n                  \"urlTemplate\": \"${homepath}search/?s={search_term_string}\"\n                },\n                \"query-input\": \"required name=search_term_string\"\n              }\n            },\n            {\n                \"@type\": \"ImageObject\",\n                \"@id\": \"${homepath}\",\n                \"url\": \"${homepath}\",\n                \"width\": \"200\",\n                \"height\": \"200\",\n                \"inLanguage\": \"en-US\"\n            },\n            {\n                \"@type\": \"Person\",\n                \"@id\": \"${homepath}author/\",\n                \"name\": \"admin\",\n                \"url\": \"${homepath}author/\",\n                \"image\": {\n                    \"@type\": \"ImageObject\",\n                    \"@id\": \"https://secure.gravatar.com/avatar/a037394d75a25a500259f54b94b393ce?s=96&amp;d=mm&amp;r=g\",\n                    \"url\": \"https://secure.gravatar.com/avatar/a037394d75a25a500259f54b94b393ce?s=96&amp;d=mm&amp;r=g\",\n                    \"caption\": \"admin\",\n                    \"inLanguage\": \"en-US\"\n                },\n                \"sameAs\": [\"${homepath}\"]\n            },\n            {\n                \"@type\": \"WebPage\",\n                \"@id\": \"${homepath}#webpage\",\n                \"url\": \"${homepath}\",\n                \"name\": \"${title} - ${sitename}\",\n                \"datePublished\": \"2021-04-26T20:52:11+00:00\",\n                \"dateModified\": \"2021-07-19T04:51:27+00:00\",\n                \"author\": { \"@id\": \"${homepath}author\" },\n                \"isPartOf\": { \"@id\": \"${homepath}#website\" },\n                \"inLanguage\": \"en-US\"\n            }\n        ]\n    }`}\n      </script>\n      \n      </Helmet>\n   )\n }\n \n Seo.defaultProps = {\n   lang: `en`,\n   meta: [],\n   description: ``,\n }\n \n Seo.propTypes = {\n   description: PropTypes.string,\n   lang: PropTypes.string,\n   meta: PropTypes.arrayOf(PropTypes.object),\n }\n \n export default Seo","import * as React from \"react\";\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\n\r\nimport Seo from '../components/seo/seoall'\r\n\r\nconst IndexPage = () => {\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    allCategoriesJson(filter: {category: {eq: \"Recommended\"}}) {\r\n      nodes {\r\n        category\r\n        content {\r\n          name\r\n          slug\r\n          posts {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allDescriptionsJson(filter: {page_location: {eq: \"recommended\"}}) {\r\n      nodes {\r\n        page_location\r\n        description\r\n          }\r\n        }\r\n  }\r\n  \r\n  `);\r\n\r\n  if (data.errors) {\r\n    console.log(\"Error retrieving data\", data.errors);\r\n    return;\r\n  }\r\n  var categ =data.allCategoriesJson.nodes[0].category.toLowerCase()\r\n  return (\r\n    <div>\r\n      <Layout>\r\n      <Seo description={data.allDescriptionsJson.nodes[0].description} slug={data.allDescriptionsJson.nodes[0].page_location} category={data.allDescriptionsJson.nodes[0].page_location} />\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row justify-content-center sec-color\">\r\n                  <h1 className=\"text-center py-5\">Recommended Articles</h1>\r\n          </div>\r\n          <div className=\"archive-table single-post py-5 m-auto\">\r\n            {data.allCategoriesJson.nodes[0].content.map((data, index) => {\r\n              if (data.posts.length!== 0){\r\n              return (\r\n                <Link to={`/${categ}/${data.slug}/`} className=\"table_row m-auto single-post\" key={`content_item_${index}`}>\r\n                  <div width=\"100%\">{data.name}</div>\r\n                  <div width=\"100%\">{data.posts.length}</div>\r\n                </Link>\r\n            );}else{return(null)}\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n"],"names":["isBrowser","window","Seo","description","lang","title","category","img","time","slug","sitename","process","replace","fullurl","homepath","location","hostname","href","pathname","pageDescription","htmlAttributes","link","rel","titleTemplate","meta","name","content","property","type","defaultProps","data","useStaticQuery","errors","categ","allCategoriesJson","nodes","toLowerCase","allDescriptionsJson","page_location","className","map","index","posts","length","Link","to","key","width","console","log"],"sourceRoot":""}