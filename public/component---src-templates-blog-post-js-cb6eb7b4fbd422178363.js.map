{"version":3,"file":"component---src-templates-blog-post-js-cb6eb7b4fbd422178363.js","mappings":"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","sources":["webpack://blogsite/./src/components/seo/seo.js","webpack://blogsite/./src/templates/blog-post.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\n import * as React from \"react\"\n import PropTypes from \"prop-types\"\n import { Helmet} from \"react-helmet\"\n \n\n const isBrowser = typeof window !== \"undefined\"\n const Seo = ({ slug, description, lang, title, img, time, category }) => {\n\n\n  var sitename = process.env.GATSBY_URL.replace('https://','').replace('.com','')\n  var fullurl = process.env.GATSBY_URL + slug + '/'\n  if (isBrowser){\n    sitename = window.location.hostname\n    fullurl = window.location.href\n  }\n\n   const pageDescription = description \n   const sitename_slug = sitename.replace(' ','')\n   \n   \n   return (\n     <Helmet\n       htmlAttributes={{\n         lang,\n       }}\n\n       link={[{ rel: 'canonical', href: fullurl }]}\n       title={title}\n\n       titleTemplate={sitename ? `%s - ${sitename}` : null}\n       \n       meta={[\n         {\n           name: `description`,\n           content: title + ' - ' + pageDescription,\n         },\n         {\n           property: `robots`,\n           content: 'follow, index, max-snippet:-1, max-video-preview:-1, max-image-preview:large',\n         },\n         {\n           property: `og:locale`,\n           content: \"en_US\",\n         },\n         {\n          property: `og:type`,\n          content: `article`,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n         {\n           property: `og:description`,\n           content: pageDescription,\n         },\n         {\n            property: `og:url`,\n            content: fullurl,\n         },\n         {\n          property: `og:image`,\n          content: img,\n         },\n         {\n            name: `og:site_name`,\n            content: sitename,\n          },\n          {\n            name: `article:publisher`,\n            content: \"https://www.facebook.com/\" + sitename_slug,\n          },\n          {\n            name: `article:author`,\n            content: \"https://www.facebook.com/\" + sitename_slug,\n          },\n          {\n            name: `article:section`,\n            content: category,\n          },\n          {\n            name: `og:updated_time`,\n            content: time,\n          },\n          {\n            name: `article:published_time`,\n            content: time,\n          },\n          {\n            name: `article:modified_time`,\n            content: time,\n          },\n          {\n            name: `twitter:card`,\n            content: 'summary_large_image',\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: pageDescription,\n          },\n         {\n           name: `twitter:image`,\n           content: img,\n         },\n         {\n           name: `twitter:label1`,\n           content: 'Written by',\n         },\n         {\n           name: `twitter:data1`,\n           content: 'admin',\n         },\n         {\n            name: `twitter:label2`,\n            content: 'Time to read',\n          },\n          {\n            name: `twitter:data2`,\n            content: '4 minutes',\n          }\n       ]}\n\n\n     >\n      <script type=\"application/ld+json\">\n        {`{\n          \"@context\": \"https://schema.org/\",\n          \"@type\": \"BlogPosting\",\n          \"mainEntityOfPage\": {\n            \"@type\": \"WebPage\",\n            \"@id\": \"https://www.example.com/\"\n          },\n          \"headline\": \"${title} - ${sitename}\",\n          \"description\": \"${title} - ${description}\",\n          \"image\": \"${img}\",\n          \"author\": {\n            \"@type\": \"Person\",\n            \"name\": \"Admin\",\n            \"url\": \"https://www.example.com/author-name\"\n          },\n          \"publisher\": {\n            \"@type\": \"Organization\",\n            \"name\": \"${sitename}\",\n            \"logo\": {\n              \"@type\": \"ImageObject\",\n              \"url\": \"https://example.com/logo.jpg\"\n            }\n          },\n          \"datePublished\": \"${time}\",\n          \"dateModified\": \"${time}\"\n       }`}\n      </script>\n      \n      </Helmet>\n   )\n }\n \n Seo.defaultProps = {\n   lang: `en`,\n   meta: [],\n   description: ``,\n }\n \n Seo.propTypes = {\n   description: PropTypes.string,\n   lang: PropTypes.string,\n   meta: PropTypes.arrayOf(PropTypes.object),\n   title: PropTypes.string.isRequired,\n }\n \n export default Seo","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n// import Image from \"gatsby-image\";\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo/seo\"\r\n\r\n\r\n\r\nconst BlogPostTemplate = ({ data }) => {\r\n  const post = data.allBlogDataJson.edges[0].node;\r\n  return (\r\n    <Layout>\r\n\r\n\r\n\r\n<Seo title={post.H1} description={post.excerpt} slug={post.slug} img={post.IMAGE_URL} time={post.date} category={post.category} />\r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"single-post\">\r\n        <div className=\"container-fluid p-0\">\r\n          \r\n          \r\n          <img\r\n            src={post.IMAGE_URL}\r\n            alt={post.H1.replace('?','')}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            className=\"pt-5\"\r\n          />\r\n          <h1 className=\"post-title py-4\">{post.H1}</h1>\r\n          <p dangerouslySetInnerHTML={{ __html: post.H1_content }}>\r\n            {/* {post.H1_content} */}\r\n          </p>\r\n          <h3>{post.H2_1}</h3>\r\n          <p dangerouslySetInnerHTML={{ __html: post.H2_1_content }}>\r\n            {/* {post.H2_1_content} */}\r\n          </p>\r\n          <h3>{post.H2_2}</h3>\r\n          <p dangerouslySetInnerHTML={{ __html: post.H2_2_content }}>\r\n            {/* {post.H2_2_content} */}\r\n          </p>\r\n          <h3>{post.H2_3}</h3>\r\n          <p dangerouslySetInnerHTML={{ __html: post.H2_3_content }}>\r\n            {/* {post.H2_3_content} */}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const query = graphql`\r\n  query ($slug: String!) {\r\n    allBlogDataJson(filter: { slug: { eq: $slug } }) {\r\n      edges {\r\n        node {\r\n          slug\r\n          H1\r\n          H1_content\r\n          H2_1\r\n          H2_1_content\r\n          H2_2\r\n          H2_2_content\r\n          H2_3\r\n          H2_3_content\r\n          H2_4\r\n          H2_4_content\r\n          IMAGE_URL\r\n          date\r\n          category\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["isBrowser","window","Seo","slug","description","lang","title","img","time","category","sitename","process","replace","fullurl","location","hostname","href","pageDescription","sitename_slug","Helmet","htmlAttributes","link","rel","titleTemplate","meta","name","content","property","type","defaultProps","post","data","allBlogDataJson","edges","node","H1","excerpt","IMAGE_URL","date","className","src","alt","width","height","dangerouslySetInnerHTML","__html","H1_content","H2_1","H2_1_content","H2_2","H2_2_content","H2_3","H2_3_content"],"sourceRoot":""}