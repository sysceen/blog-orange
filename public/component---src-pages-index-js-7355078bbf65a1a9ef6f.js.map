{"version":3,"file":"component---src-pages-index-js-7355078bbf65a1a9ef6f.js","mappings":"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","sources":["webpack://blogsite/./src/components/seo/seoall.js","webpack://blogsite/./src/pages/index.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\n import * as React from \"react\"\n import PropTypes from \"prop-types\"\n import { Helmet} from \"react-helmet\"\n \n\n const isBrowser = typeof window !== \"undefined\"\n const Seo = ({ description, lang, title, img, time, category, slug }) => {\n\n\n  var sitename = toString(process.env.GATSBY_URL).replace('https://','').replace('.com','')\n  var fullurl = process.env.GATSBY_URL + slug + '/'\n  if (slug == ''){fullurl = process.env.GATSBY_URL}\n  var homepath = ''\n  if (isBrowser){\n    sitename = window.location.hostname\n    fullurl = window.location.href\n    homepath = window.location.href.replace(window.location.pathname,'')\n  }\n\n   const pageDescription = description \n   \n   \n   return (\n     <Helmet\n       htmlAttributes={{\n         lang,\n       }}\n\n       link={[{ rel: 'canonical', href: fullurl }]}\n       title={category}\n\n       titleTemplate={sitename ? `%s - ${sitename}` : null}\n       \n       meta={[\n         {\n           name: `description`,\n           content: category + ' - ' + pageDescription,\n         },\n         {\n           property: `robots`,\n           content: 'follow, index, max-snippet:-1, max-video-preview:-1, max-image-preview:large',\n         },\n         {\n           property: `og:locale`,\n           content: \"en_US\",\n         },\n         {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:title`,\n          content: category + ' - ' + sitename,\n        },\n         {\n           property: `og:description`,\n           content: pageDescription,\n         },\n         {\n            property: `og:url`,\n            content: fullurl,\n         },\n         {\n            name: `og:site_name`,\n            content: sitename,\n          },\n          {\n            name: `twitter:card`,\n            content: 'summary_large_image',\n          },\n          {\n            name: `twitter:title`,\n            content: category + ' - ' + sitename,\n          },\n          {\n            name: `twitter:description`,\n            content: pageDescription,\n          },\n         {\n           name: `twitter:label1`,\n           content: 'Written by',\n         },\n         {\n           name: `twitter:data1`,\n           content: 'admin',\n         },\n         {\n            name: `twitter:label2`,\n            content: 'Time to read',\n          },\n          {\n            name: `twitter:data2`,\n            content: '4 minutes',\n          }\n       ]}\n\n\n     >\n      <script type=\"application/ld+json\">\n        {`{\n        \"@context\": \"https://schema.org/\",\n        \"@graph\": [\n            { \"@type\": [\"Person\", \"Organization\"], \"@id\": \"${homepath}#person\", \"name\": \"Ayush\" },\n            {\n              \"@context\": \"https://schema.org/\",\n              \"@type\": \"WebSite\",\n              \"url\": \"${homepath}\",\n              \"potentialAction\": {\n                \"@type\": \"SearchAction\",\n                \"target\": {\n                  \"@type\": \"EntryPoint\",\n                  \"urlTemplate\": \"${homepath}search/?s={search_term_string}\"\n                },\n                \"query-input\": \"required name=search_term_string\"\n              }\n            },\n            {\n                \"@type\": \"ImageObject\",\n                \"@id\": \"${homepath}\",\n                \"url\": \"${homepath}\",\n                \"width\": \"200\",\n                \"height\": \"200\",\n                \"inLanguage\": \"en-US\"\n            },\n            {\n                \"@type\": \"Person\",\n                \"@id\": \"${homepath}author/\",\n                \"name\": \"admin\",\n                \"url\": \"${homepath}author/\",\n                \"image\": {\n                    \"@type\": \"ImageObject\",\n                    \"@id\": \"https://secure.gravatar.com/avatar/a037394d75a25a500259f54b94b393ce?s=96&amp;d=mm&amp;r=g\",\n                    \"url\": \"https://secure.gravatar.com/avatar/a037394d75a25a500259f54b94b393ce?s=96&amp;d=mm&amp;r=g\",\n                    \"caption\": \"admin\",\n                    \"inLanguage\": \"en-US\"\n                },\n                \"sameAs\": [\"${homepath}\"]\n            },\n            {\n                \"@type\": \"WebPage\",\n                \"@id\": \"${homepath}#webpage\",\n                \"url\": \"${homepath}\",\n                \"name\": \"${title} - ${sitename}\",\n                \"datePublished\": \"2021-04-26T20:52:11+00:00\",\n                \"dateModified\": \"2021-07-19T04:51:27+00:00\",\n                \"author\": { \"@id\": \"${homepath}author\" },\n                \"isPartOf\": { \"@id\": \"${homepath}#website\" },\n                \"inLanguage\": \"en-US\"\n            }\n        ]\n    }`}\n      </script>\n      \n      </Helmet>\n   )\n }\n \n Seo.defaultProps = {\n   lang: `en`,\n   meta: [],\n   description: ``,\n }\n \n Seo.propTypes = {\n   description: PropTypes.string,\n   lang: PropTypes.string,\n   meta: PropTypes.arrayOf(PropTypes.object),\n }\n \n export default Seo","import * as React from \"react\";\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport Seo from '../components/seo/seoall'\r\n\r\n\r\n\r\n\r\n\r\nconst IndexPage = () => {\r\n\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allBlogDataJson {\r\n        edges {\r\n          node {\r\n            slug\r\n            H1 \r\n            excerpt\r\n          }\r\n        }\r\n      }\r\n      \r\n        allDescriptionsJson(filter: {page_location: {eq: \"homepage\"}}) {\r\n          nodes {\r\n            page_location\r\n            description\r\n              }\r\n            }\r\n          \r\n    }\r\n  `);\r\n    \r\n\r\n  if (data.errors) {\r\n    console.log(\"Error retrieving data\", data.errors);\r\n    return;\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n\r\n\r\n      <Layout>\r\n      <Seo description={data.allDescriptionsJson.nodes[0].description} slug='' category={data.allDescriptionsJson.nodes[0].page_location} />\r\n\r\n        <div className=\"container-fluid p-0\">\r\n          <div className=\"row single-post m-auto justify-content-between mt-2 mt-lg-5\">\r\n            {console.log(process.env.GATSBY_URL) }\r\n            {data.allBlogDataJson.edges.map((data, index) => {\r\n              var excerpto = data.node.excerpt.substring(0,100).split(' ')\r\n              \r\n              return (    \r\n                <div className=\"col-12 col-md-6 col-lg-4 p-0 card-holder\" key={`content_item_${index}`}>\r\n                  <div className=\"card-body my-3 sec-color\">\r\n                  <Link to={`/${data.node.slug}/`} className='linkcard'>\r\n                    <h2 className=\"card-title\">{data.node.H1}</h2>\r\n                    <p className=\"card-text\">{excerpto.slice(0, excerpto.length - 1).join(' ')} ...</p>\r\n                    \r\n                    <div  className=\"card-link\">Read More â†’</div>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"col-12 col-md-6 col-lg-4 p-0 card-holder\" key=\"added\"></div>\r\n\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n"],"names":["isBrowser","window","Seo","description","lang","title","category","img","time","slug","sitename","toString","process","replace","fullurl","homepath","location","hostname","href","pathname","pageDescription","htmlAttributes","link","rel","titleTemplate","meta","name","content","property","type","defaultProps","data","useStaticQuery","errors","allDescriptionsJson","nodes","page_location","className","console","log","allBlogDataJson","edges","map","index","excerpto","node","excerpt","substring","split","key","Link","to","H1","slice","length","join"],"sourceRoot":""}