{"version":3,"file":"component---src-templates-cat-js-6a0a75be502cd8501344.js","mappings":"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","sources":["webpack://blogsite/./src/components/seo/seoall.js","webpack://blogsite/./src/templates/cat.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\n import * as React from \"react\"\n import PropTypes from \"prop-types\"\n import { Helmet} from \"react-helmet\"\n \n\n const isBrowser = typeof window !== \"undefined\"\n const Seo = ({ description, lang, title, img, time, category, slug }) => {\n\n\n  var sitename = process.env.GATSBY_URL.replace('https://','').replace('.com','')\n  var fullurl = process.env.GATSBY_URL + slug + '/'\n  if (slug == ''){fullurl = process.env.GATSBY_URL}\n  var homepath = ''\n  if (isBrowser){\n    sitename = window.location.hostname\n    fullurl = window.location.href\n    homepath = window.location.href.replace(window.location.pathname,'')\n  }\n\n   const pageDescription = description \n   \n   \n   return (\n     <Helmet\n       htmlAttributes={{\n         lang,\n       }}\n\n       link={[{ rel: 'canonical', href: fullurl }]}\n       title={category}\n\n       titleTemplate={sitename ? `%s - ${sitename}` : null}\n       \n       meta={[\n         {\n           name: `description`,\n           content: category + ' - ' + pageDescription,\n         },\n         {\n           property: `robots`,\n           content: 'follow, index, max-snippet:-1, max-video-preview:-1, max-image-preview:large',\n         },\n         {\n           property: `og:locale`,\n           content: \"en_US\",\n         },\n         {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:title`,\n          content: category + ' - ' + sitename,\n        },\n         {\n           property: `og:description`,\n           content: pageDescription,\n         },\n         {\n            property: `og:url`,\n            content: fullurl,\n         },\n         {\n            name: `og:site_name`,\n            content: sitename,\n          },\n          {\n            name: `twitter:card`,\n            content: 'summary_large_image',\n          },\n          {\n            name: `twitter:title`,\n            content: category + ' - ' + sitename,\n          },\n          {\n            name: `twitter:description`,\n            content: pageDescription,\n          },\n         {\n           name: `twitter:label1`,\n           content: 'Written by',\n         },\n         {\n           name: `twitter:data1`,\n           content: 'admin',\n         },\n         {\n            name: `twitter:label2`,\n            content: 'Time to read',\n          },\n          {\n            name: `twitter:data2`,\n            content: '4 minutes',\n          }\n       ]}\n\n\n     >\n      <script type=\"application/ld+json\">\n        {`{\n        \"@context\": \"https://schema.org/\",\n        \"@graph\": [\n            { \"@type\": [\"Person\", \"Organization\"], \"@id\": \"${homepath}#person\", \"name\": \"Ayush\" },\n            {\n              \"@context\": \"https://schema.org/\",\n              \"@type\": \"WebSite\",\n              \"url\": \"${homepath}\",\n              \"potentialAction\": {\n                \"@type\": \"SearchAction\",\n                \"target\": {\n                  \"@type\": \"EntryPoint\",\n                  \"urlTemplate\": \"${homepath}search/?s={search_term_string}\"\n                },\n                \"query-input\": \"required name=search_term_string\"\n              }\n            },\n            {\n                \"@type\": \"ImageObject\",\n                \"@id\": \"${homepath}\",\n                \"url\": \"${homepath}\",\n                \"width\": \"200\",\n                \"height\": \"200\",\n                \"inLanguage\": \"en-US\"\n            },\n            {\n                \"@type\": \"Person\",\n                \"@id\": \"${homepath}author/\",\n                \"name\": \"admin\",\n                \"url\": \"${homepath}author/\",\n                \"image\": {\n                    \"@type\": \"ImageObject\",\n                    \"@id\": \"https://secure.gravatar.com/avatar/a037394d75a25a500259f54b94b393ce?s=96&amp;d=mm&amp;r=g\",\n                    \"url\": \"https://secure.gravatar.com/avatar/a037394d75a25a500259f54b94b393ce?s=96&amp;d=mm&amp;r=g\",\n                    \"caption\": \"admin\",\n                    \"inLanguage\": \"en-US\"\n                },\n                \"sameAs\": [\"${homepath}\"]\n            },\n            {\n                \"@type\": \"WebPage\",\n                \"@id\": \"${homepath}#webpage\",\n                \"url\": \"${homepath}\",\n                \"name\": \"${title} - ${sitename}\",\n                \"datePublished\": \"2021-04-26T20:52:11+00:00\",\n                \"dateModified\": \"2021-07-19T04:51:27+00:00\",\n                \"author\": { \"@id\": \"${homepath}author\" },\n                \"isPartOf\": { \"@id\": \"${homepath}#website\" },\n                \"inLanguage\": \"en-US\"\n            }\n        ]\n    }`}\n      </script>\n      \n      </Helmet>\n   )\n }\n \n Seo.defaultProps = {\n   lang: `en`,\n   meta: [],\n   description: ``,\n }\n \n Seo.propTypes = {\n   description: PropTypes.string,\n   lang: PropTypes.string,\n   meta: PropTypes.arrayOf(PropTypes.object),\n }\n \n export default Seo","import * as React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport Seo from '../components/seo/seoall'\r\n\r\nconst BlogPostTemplate = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <Layout>\r\n      <Seo description={data.allDescriptionsJson.nodes[0].description} slug={data.allCategoriesJson.edges[0].node.category.toLowerCase() + '/' + data.allCategoriesJson.edges[0].node.content[0].slug} category={data.allCategoriesJson.edges[0].node.category + ' ' + data.allCategoriesJson.edges[0].node.content[0].name} />\r\n\r\n        <div className=\"container-fluid p-0\">\r\n          <br />\r\n          <br />\r\n          <div className=\"row single-post m-auto justify-content-between\">\r\n            {data.allCategoriesJson.edges[0].node.content[0].posts.map((data, index) => {\r\n              var excerpto = data.excerpt.substring(0,100).split(' ')\r\n              var empt = 58 - data.H1.length\r\n              if (empt>0){data.H1 = data.H1 + ' ' + '\\u00a0'.repeat(empt*2)}\r\n\r\n              return (\r\n                <div className=\"col-12 col-md-6 col-lg-4 p-0 card-holder\" key={`content_item_${index}`}>\r\n                  <div className=\"card-body me-md-4 mx-2 mx-md-0 my-3 sec-color\">\r\n                    <Link to={`/${data.slug}/`} className='linkcard'>\r\n                    <h2 className=\"card-title\">{data.H1}</h2>\r\n                    <p className=\"card-text\">{excerpto.slice(0, excerpto.length - 1).join(' ')} ...</p>\r\n                    \r\n                    <div className=\"card-link\">Read More â†’</div>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n\r\n              );\r\n            })}\r\n            <div className=\"col-12 col-md-6 col-lg-4 p-0 card-holder\" key=\"added\"></div>\r\n\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const query = graphql`\r\n  query ($slug: String!, $categoryname: String!) {\r\n    allCategoriesJson(filter: {category: {eq: $categoryname}, content: {elemMatch: {slug: {eq: $slug}}}}\r\n    ) {\r\n      edges {\r\n        node {\r\n          category\r\n          content {\r\n            name\r\n            slug\r\n            posts {\r\n              H1\r\n              H1_content\r\n              H2_1\r\n              H2_1_content\r\n              H2_2\r\n              H2_2_content\r\n              H2_3\r\n              H2_4\r\n              H2_3_content\r\n              IMAGE_URL\r\n              H2_4_content\r\n              date\r\n              category\r\n              excerpt\r\n              slug\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allDescriptionsJson(filter: {page_location: {eq: \"archives\"}}) {\r\n      nodes {\r\n        page_location\r\n        description\r\n          }\r\n        }\r\n  }\r\n`;\r\n"],"names":["isBrowser","window","Seo","description","lang","title","category","img","time","slug","sitename","process","replace","fullurl","homepath","location","hostname","href","pathname","pageDescription","htmlAttributes","link","rel","titleTemplate","meta","name","content","property","type","defaultProps","data","allDescriptionsJson","nodes","allCategoriesJson","edges","node","toLowerCase","className","posts","map","index","excerpto","excerpt","substring","split","empt","H1","length","repeat","key","Link","to","slice","join"],"sourceRoot":""}